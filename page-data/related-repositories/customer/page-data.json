{"componentChunkName":"component---src-pages-related-repositories-customer-mdx","path":"/related-repositories/customer/","result":{"pageContext":{"frontmatter":{"title":"Customer","description":"This project demonstrates the implementation of Customer Microservice"},"relativePagePath":"/related-repositories/customer.mdx","titleType":"page","MdxNode":{"id":"d27f0c2a-6852-518d-b50c-d77d1512959b","children":[],"parent":"8e14bfd0-5bc0-57a9-81dc-e7456e83185f","internal":{"content":"---\ntitle: Customer\ndescription: This project demonstrates the implementation of Customer Microservice\n---\n\n## Introduction\n\nThis project is built to demonstrate how to build Customer Microservice. This application provides basic operations of creating and querying customer profiles from [Apache's CouchDB](http://couchdb.apache.org/) NoSQL database as part of the Customer Profile functionality of Storfront. Additionally, the Auth Microservice calls this microservice to perform Customer `username/password` authentication.\n\nThough it is a part of a bigger application, Customer service is itself an application in turn that queries the CouchDB Database.\n\n## Architecture\n\n![Customer Microservice](../../images/customer.png)\n\n## APIs\n\n| APIs                       | Function                          |\n| -------------------------- | --------------------------------- |\n| `/customer/{id}`           | Get a customer by id              |\n| `/customer/update/{id}`    | Update a customer by id           |\n| `/customer/delete/{id}`    | Delete a customer by id           |\n| `/customer/add`            | Post a customer                   |\n| `/customer/list`           | Get a list of available customers |\n| `/customer/search`         | Search a customer                 |\n\n## Frameworks\n\n<Tabs>\n\n<Tab label=\"SpringBoot\">\n\n[Customer Github Repo](https://github.com/ibm-garage-ref-storefront/customer-ms-spring)\n\n### Project Features\n\n<br/><br/>\n\n- Leverage [Spring Boot](https://projects.spring.io/spring-boot/) framework to build a Microservices application.\n- Uses [Spring Data JPA](http://projects.spring.io/spring-data-jpa/) to persist data to CouchDB database.\n- Uses [CouchDB](http://couchdb.apache.org/) as the customer database.\n- Uses [Docker](https://docs.docker.com/) to package application binary and its dependencies.\n\n<br/><br/>\n\n<Row>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app locally\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"https://github.com/ibm-garage-ref-storefront/customer-ms-spring/blob/master/README.md\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/local_run.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app to Openshift 4.3\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"/\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/redhat_openshift.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app using CP4Apps\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"/\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"CP4Apps\"\n      >\n\n![Light dark](./images/cloud-pak-for-applications.jpg)\n\n  </ImageCard>\n  </Column>\n</Row>\n\n</Tab>\n\n<Tab label=\"OpenLiberty\">\n\nTBD\n\n</Tab>\n\n<Tab label=\"Quarkus\">\n\nTBD\n\n</Tab>\n\n</Tabs>\n","type":"Mdx","contentDigest":"3fbfc4961a1010a8b07100af645714af","counter":108,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Customer","description":"This project demonstrates the implementation of Customer Microservice"},"exports":{},"rawBody":"---\ntitle: Customer\ndescription: This project demonstrates the implementation of Customer Microservice\n---\n\n## Introduction\n\nThis project is built to demonstrate how to build Customer Microservice. This application provides basic operations of creating and querying customer profiles from [Apache's CouchDB](http://couchdb.apache.org/) NoSQL database as part of the Customer Profile functionality of Storfront. Additionally, the Auth Microservice calls this microservice to perform Customer `username/password` authentication.\n\nThough it is a part of a bigger application, Customer service is itself an application in turn that queries the CouchDB Database.\n\n## Architecture\n\n![Customer Microservice](../../images/customer.png)\n\n## APIs\n\n| APIs                       | Function                          |\n| -------------------------- | --------------------------------- |\n| `/customer/{id}`           | Get a customer by id              |\n| `/customer/update/{id}`    | Update a customer by id           |\n| `/customer/delete/{id}`    | Delete a customer by id           |\n| `/customer/add`            | Post a customer                   |\n| `/customer/list`           | Get a list of available customers |\n| `/customer/search`         | Search a customer                 |\n\n## Frameworks\n\n<Tabs>\n\n<Tab label=\"SpringBoot\">\n\n[Customer Github Repo](https://github.com/ibm-garage-ref-storefront/customer-ms-spring)\n\n### Project Features\n\n<br/><br/>\n\n- Leverage [Spring Boot](https://projects.spring.io/spring-boot/) framework to build a Microservices application.\n- Uses [Spring Data JPA](http://projects.spring.io/spring-data-jpa/) to persist data to CouchDB database.\n- Uses [CouchDB](http://couchdb.apache.org/) as the customer database.\n- Uses [Docker](https://docs.docker.com/) to package application binary and its dependencies.\n\n<br/><br/>\n\n<Row>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app locally\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"https://github.com/ibm-garage-ref-storefront/customer-ms-spring/blob/master/README.md\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/local_run.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app to Openshift 4.3\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"/\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/redhat_openshift.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app using CP4Apps\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"/\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"CP4Apps\"\n      >\n\n![Light dark](./images/cloud-pak-for-applications.jpg)\n\n  </ImageCard>\n  </Column>\n</Row>\n\n</Tab>\n\n<Tab label=\"OpenLiberty\">\n\nTBD\n\n</Tab>\n\n<Tab label=\"Quarkus\">\n\nTBD\n\n</Tab>\n\n</Tabs>\n","fileAbsolutePath":"/home/travis/build/ibm-garage-ref-storefront/docs/src/pages/related-repositories/customer.mdx"}}}}