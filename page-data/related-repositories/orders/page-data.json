{"componentChunkName":"component---src-pages-related-repositories-orders-mdx","path":"/related-repositories/orders/","result":{"pageContext":{"frontmatter":{"title":"Orders","description":"This project demonstrates the implementation of Orders Microservice"},"relativePagePath":"/related-repositories/orders.mdx","titleType":"page","MdxNode":{"id":"6f943366-f1a4-546c-9b8f-abf18960bce0","children":[],"parent":"412b4718-cf52-5a2f-8973-da4d4c4dfa31","internal":{"content":"---\ntitle: Orders\ndescription: This project demonstrates the implementation of Orders Microservice\n---\n\n## Introduction\n\nThis project demonstrates the implementation of Orders Microservice. This microservice uses MariaDB database as its datasource. It has the complete list of all the orders placed by different customers in our store front.\n\nThough it is a part of a bigger application, Orders service is itself an application in turn that manages the data from data store.\n\n## Architecture\n\n![Orders Microservice](../../images/orders.png)\n\n## APIs\n\n| APIs                       | Function                          |\n| -------------------------- | --------------------------------- |\n| `/micro/orders`            | Get all orders                    |\n| `/micro/orders/{id}`       | Get order by ID.                  |\n| `/micro/orders`            | Post an order                     |\n\n## Frameworks\n\n<Tabs>\n\n<Tab label=\"SpringBoot\">\n\n[Orders Github Repo](https://github.com/ibm-garage-ref-storefront/orders-ms-spring/)\n\n### Project Features\n\n<br/><br/>\n\n- Leverages [Spring Boot](https://projects.spring.io/spring-boot/) framework to build a Microservices application.\n- Uses [MariaDB](https://mariadb.org/) as the orders database.\n- Uses [Spring Data JPA](http://projects.spring.io/spring-data-jpa/) to persist data to MariaDB database.\n- [OAuth 2.0](https://oauth.net/2/) protected APIs using Spring Security framework.\n- Uses [Docker](https://docs.docker.com/) to package application binary and its dependencies.\n- When retrieving orders using the OAuth 2.0 protected APIs, return only orders belonging to the user identity encoded in the user_name claim in the JWT payload. For more details on how identity is propagated, refer [Auth](https://github.com/ibm-garage-ref-storefront/auth-ms-spring) Microservice.\n\n<br/><br/>\n\n<Row>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app locally\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"https://github.com/ibm-garage-ref-storefront/orders-ms-spring/blob/master/README.md\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/local_run.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app to Openshift 4.3\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"/\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/redhat_openshift.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app using CP4Apps\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"https://github.com/ibm-garage-ref-storefront/orders-ms-spring/blob/master/docs/CP4APPS.md\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"CP4Apps\"\n      >\n\n![Light dark](./images/cloud-pak-for-applications.jpg)\n\n  </ImageCard>\n  </Column>\n</Row>\n\n</Tab>\n\n<Tab label=\"OpenLiberty\">\n\nTBD\n\n</Tab>\n\n<Tab label=\"Quarkus\">\n\nTBD\n\n</Tab>\n\n</Tabs>\n","type":"Mdx","contentDigest":"2c6807cdd36835513278a4200e386ccd","counter":112,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Orders","description":"This project demonstrates the implementation of Orders Microservice"},"exports":{},"rawBody":"---\ntitle: Orders\ndescription: This project demonstrates the implementation of Orders Microservice\n---\n\n## Introduction\n\nThis project demonstrates the implementation of Orders Microservice. This microservice uses MariaDB database as its datasource. It has the complete list of all the orders placed by different customers in our store front.\n\nThough it is a part of a bigger application, Orders service is itself an application in turn that manages the data from data store.\n\n## Architecture\n\n![Orders Microservice](../../images/orders.png)\n\n## APIs\n\n| APIs                       | Function                          |\n| -------------------------- | --------------------------------- |\n| `/micro/orders`            | Get all orders                    |\n| `/micro/orders/{id}`       | Get order by ID.                  |\n| `/micro/orders`            | Post an order                     |\n\n## Frameworks\n\n<Tabs>\n\n<Tab label=\"SpringBoot\">\n\n[Orders Github Repo](https://github.com/ibm-garage-ref-storefront/orders-ms-spring/)\n\n### Project Features\n\n<br/><br/>\n\n- Leverages [Spring Boot](https://projects.spring.io/spring-boot/) framework to build a Microservices application.\n- Uses [MariaDB](https://mariadb.org/) as the orders database.\n- Uses [Spring Data JPA](http://projects.spring.io/spring-data-jpa/) to persist data to MariaDB database.\n- [OAuth 2.0](https://oauth.net/2/) protected APIs using Spring Security framework.\n- Uses [Docker](https://docs.docker.com/) to package application binary and its dependencies.\n- When retrieving orders using the OAuth 2.0 protected APIs, return only orders belonging to the user identity encoded in the user_name claim in the JWT payload. For more details on how identity is propagated, refer [Auth](https://github.com/ibm-garage-ref-storefront/auth-ms-spring) Microservice.\n\n<br/><br/>\n\n<Row>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app locally\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"https://github.com/ibm-garage-ref-storefront/orders-ms-spring/blob/master/README.md\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/local_run.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app to Openshift 4.3\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"/\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"Appsody\"\n      >\n\n![Light dark](./images/redhat_openshift.jpg)\n\n  </ImageCard>\n  </Column>\n  <Column colMd={3} colLg={4} noGutterSm>\n    <ImageCard\n      title=\"Deploy the app using CP4Apps\"\n      titleColor=\"light\"\n      aspectRatio=\"1:1\"\n      href=\"https://github.com/ibm-garage-ref-storefront/orders-ms-spring/blob/master/docs/CP4APPS.md\"\n      actionIcon=\"arrowRight\"\n      subTitleColor=\"light\"\n      subTitle=\"CP4Apps\"\n      >\n\n![Light dark](./images/cloud-pak-for-applications.jpg)\n\n  </ImageCard>\n  </Column>\n</Row>\n\n</Tab>\n\n<Tab label=\"OpenLiberty\">\n\nTBD\n\n</Tab>\n\n<Tab label=\"Quarkus\">\n\nTBD\n\n</Tab>\n\n</Tabs>\n","fileAbsolutePath":"/home/travis/build/ibm-garage-ref-storefront/docs/src/pages/related-repositories/orders.mdx"}}}}