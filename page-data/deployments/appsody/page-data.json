{"componentChunkName":"component---src-pages-deployments-appsody-mdx","path":"/deployments/appsody/","result":{"pageContext":{"frontmatter":{"title":"Deploy Storefront locally on your machine","description":"Instructions to deploy storefront locally"},"relativePagePath":"/deployments/appsody.mdx","titleType":"page","MdxNode":{"id":"16cd3ff7-95a0-5ef1-977a-33330c63d6e1","children":[],"parent":"03e7e8c9-3be4-53a4-ba87-569ee653aa75","internal":{"content":"---\ntitle: Deploy Storefront locally on your machine\ndescription: Instructions to deploy storefront locally\n---\n\n## Introduction\n\nStorefront is a simple shopping application that displays a catalog of antique computing devices, where users can search and buy products. It has a Web interface, and it relies on BFF (Backend for Frontend) services to interact with the backend services.\n\n## Pre-requisites:\n\n* [Appsody](https://appsody.dev/)\n  - [Installing on MacOS](https://appsody.dev/docs/installing/macos)\n  - [Installing on Windows](https://appsody.dev/docs/installing/windows)\n  - [Installing on RHEL](https://appsody.dev/docs/installing/rhel)\n  - [Installing on Ubuntu](https://appsody.dev/docs/installing/ubuntu)\n\nFor more details on installation, check [this](https://appsody.dev/docs/installing/installing-appsody/) out.\n\n* Docker Desktop\n  - [Docker for Mac](https://docs.docker.com/docker-for-mac/)\n  - [Docker for Windows](https://docs.docker.com/docker-for-windows/)\n\n## Running the application locally\n\nLet us now deploy all the microservices of our storefront one by one locally.\n\n### Inventory\n\n- Clone inventory repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/inventory-ms-spring.git\ncd inventory-ms-spring\n```\n\n#### Deploy MySQL database\n\n<br></br>\n\n```\n# Start a MySQL Container with a database user, a password, and create a new database\ndocker run --name inventorymysql \\\n    -e MYSQL_ROOT_PASSWORD=admin123 \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e MYSQL_DATABASE=inventorydb \\\n    -p 3306:3306 \\\n    -d mysql:5.7.14\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n84a511e74794        mysql:5.7.14        \"docker-entrypoint.s…\"   13 seconds ago      Up 12 seconds       0.0.0.0:3306->3306/tcp   inventorymysql\n```\n\n- Now let us populate the MySQL with data.\n\nFirstly, `ssh` into the MySQL container.\n\n```\ndocker exec -it inventorymysql bash\n```\n\n- Now, run the below command for table creation.\n\n```\nmysql -udbuser -ppassword\n```\n\n- This will take you to something like below.\n\n```\nroot@d88a6e5973de:/# mysql -udbuser -ppassword\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2\nServer version: 5.7.14 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql>\n```\n\n- Go to `scripts > mysql_data.sql`. Copy the contents from [mysql_data.sql](./scripts/mysql_data.sql) and paste the contents in the console.\n\n- You can exit from the console using `exit`.\n\n```\nmysql> exit\nBye\n```\n\n- To come out of the container, enter `exit`.\n\n```\nroot@d88a6e5973de:/# exit\n```\n\n#### Deploy Inventory app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build inventory docker image\nappsody build\n\n# Start the Inventory Container\ndocker run --name inventory-ms-spring \\\n    -e MYSQL_HOST=<docker_host> \\\n    -e MYSQL_PORT=3306 \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e MYSQL_DATABASE=inventorydb \\\n    -p 8081:8080 \\\n    -d dev.local/inventory-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                              NAMES\naad8b8e1bce6        dev.local/inventory-ms-spring   \"/start.sh\"              6 seconds ago       Up 5 seconds        8443/tcp, 0.0.0.0:8081->8080/tcp   inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                    \"docker-entrypoint.s…\"   50 minutes ago      Up 50 minutes       0.0.0.0:3306->3306/tcp             inventorymysql\n```\n\n### Catalog\n\n- Clone catalog repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/catalog-ms-spring.git\ncd catalog-ms-spring\n```\n\n#### Deploy ElasticSearch\n\n<br></br>\n\n```\n# Start an Elasticsearch Container\ndocker run --name catalogelasticsearch \\\n      -e \"discovery.type=single-node\" \\\n      -p 9200:9200 \\\n      -p 9300:9300 \\\n      -d docker.elastic.co/elasticsearch/elasticsearch:6.3.2\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   6 minutes ago       Up 6 minutes        0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              11 minutes ago      Up 11 minutes       8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   About an hour ago   Up About an hour    0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n#### Deploy Catalog app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build catalog docker image\nappsody build\n\n# Start the Catalog Container\ndocker run --name inventory-ms-spring \\\n    -e ELASTIC_CLUSTER_NAME=docker-cluster \\\n    -e ELASTIC_NODE_URL=<docker_host>:9300 \\\n    -e INVENTORY_URL=http://<docker_host>:8081/micro/inventory \\\n    -p 8082:8080 \\\n    -d dev.local/catalog-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\ndocker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              4 seconds ago       Up 3 seconds        8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   37 minutes ago      Up 37 minutes       0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              41 minutes ago      Up 41 minutes       8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   2 hours ago         Up 2 hours          0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Customer\n\n- Clone customer repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/customer-ms-spring\ncd customer-ms-spring\n```\n\n#### Deploy CouchDB\n\n<br></br>\n\n```\n# Start a CouchDB Container with a database user, a password, and create a new database\ndocker run --name customercouchdb -p 5985:5984 -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=passw0rd -d couchdb:2.1.2\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   26 seconds ago      Up 23 seconds       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              14 hours ago        Up 14 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n#### Deploy Customer app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build customer docker image\nappsody build\n\n# Start the customer Container\ndocker run --name customer-ms-spring \\\n    -e COUCHDB_PORT=5985 \\\n    -e COUCHDB_HOST=host.docker.internal \\\n    -e COUCHDB_PROTOCOL=http \\\n    -e COUCHDB_USERNAME=admin \\\n    -e COUCHDB_PASSWORD=passw0rd \\\n    -e COUCHDB_DATABASE=customers \\\n    -e HS256_KEY=E6526VJkKYhyTFRFMC0pTECpHcZ7TGcq8pKsVVgz9KtESVpheEO284qKzfzg8HpWNBPeHOxNGlyudUHi6i8tFQJXC8PiI48RUpMh23vPDLGD35pCM0417gf58z5xlmRNii56fwRCmIhhV7hDsm3KO2jRv4EBVz7HrYbzFeqI45CaStkMYNipzSm2duuer7zRdMjEKIdqsby0JfpQpykHmC5L6hxkX0BT7XWqztTr6xHCwqst26O0g8r7bXSYjp4a \\\n    -p 8083:8080 \\\n    -d dev.local/customer-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n34f3b55f7bee        dev.local/customer-ms-spring                          \"/start.sh\"              59 seconds ago      Up 58 seconds       8443/tcp, 0.0.0.0:8083->8080/tcp                 customer-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   26 minutes ago      Up 26 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Auth\n\n- Clone auth repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/auth-ms-spring.git\ncd auth-ms-spring\n```\n\n#### Deploy Auth app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build auth docker image\nappsody build\n\n# Start the Auth Container\ndocker run --name auth-ms-spring \\\n    -e CUSTOMER_URL=http://<docker_host>:8083/micro/customer/search \\\n    -e HS256_KEY=E6526VJkKYhyTFRFMC0pTECpHcZ7TGcq8pKsVVgz9KtESVpheEO284qKzfzg8HpWNBPeHOxNGlyudUHi6i8tFQJXC8PiI48RUpMh23vPDLGD35pCM0417gf58z5xlmRNii56fwRCmIhhV7hDsm3KO2jRv4EBVz7HrYbzFeqI45CaStkMYNipzSm2duuer7zRdMjEKIdqsby0JfpQpykHmC5L6hxkX0BT7XWqztTr6xHCwqst26O0g8r7bXSYjp4a \\\n    -p 8084:8080 \\\n    -d dev.local/auth-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              24 seconds ago      Up 23 seconds       8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   26 minutes ago      Up 26 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Orders\n\n- Clone orders repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/orders-ms-spring.git\ncd orders-ms-spring\n```\n\n#### Deploy Mariadb\n\n<br></br>\n\n```\n# Start a MariaDB Container with a database user, a password, and create a new database\ndocker run --name ordersmysql \\\n    -e MYSQL_ROOT_PASSWORD=admin123 \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e MYSQL_DATABASE=ordersdb \\\n    -p 3307:3306 \\\n    -d mariadb\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\na0b8b6357607        mariadb                                               \"docker-entrypoint.s…\"   7 seconds ago       Up 4 seconds        0.0.0.0:3307->3306/tcp                           ordersmysql\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              3 minutes ago       Up 3 minutes        8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   29 minutes ago      Up 29 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              16 hours ago        Up 16 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n#### Deploy Orders app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build orders docker image\nappsody build\n\n# Start the Orders Container\ndocker run --name orders-ms-spring \\\n    -e MYSQL_HOST=<docker_host> \\\n    -e MYSQL_PORT=3307 \\\n    -e MYSQL_DATABASE=ordersdb \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e HS256_KEY=E6526VJkKYhyTFRFMC0pTECpHcZ7TGcq8pKsVVgz9KtESVpheEO284qKzfzg8HpWNBPeHOxNGlyudUHi6i8tFQJXC8PiI48RUpMh23vPDLGD35pCM0417gf58z5xlmRNii56fwRCmIhhV7hDsm3KO2jRv4EBVz7HrYbzFeqI45CaStkMYNipzSm2duuer7zRdMjEKIdqsby0JfpQpykHmC5L6hxkX0BT7XWqztTr6xHCwqst26O0g8r7bXSYjp4a \\\n    -p 8085:8080 \\\n    -d dev.local/orders-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\nf21a9ac266c5        dev.local/orders-ms-spring                            \"/start.sh\"              50 seconds ago      Up 49 seconds       8443/tcp, 0.0.0.0:8085->8080/tcp                 orders-ms-spring\na0b8b6357607        mariadb                                               \"docker-entrypoint.s…\"   15 minutes ago      Up 14 minutes       0.0.0.0:3307->3306/tcp                           ordersmysql\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              18 minutes ago      Up 18 minutes       8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   44 minutes ago      Up 44 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   16 hours ago        Up 16 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              16 hours ago        Up 16 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   17 hours ago        Up 17 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Storefront UI\n\n- Clone auth repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/storefront-ui.git\ncd storefront-ui\n```\n\n#### Deploy Storefront UI\n\n<br></br>\n\nRun the below command.\n\n```\n# Build storefront ui docker image\nappsody build\n\n# Start the Storefront UI Container\ndocker run --name web \\\n  -e NODE_ENV=development \\\n  -p 3000:3000 \\\n  -d dev.local/web\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED              STATUS              PORTS                                            NAMES\nc0d657aa0886        dev.local/orders-ms-spring                            \"/start.sh\"              About a minute ago   Up About a minute   8443/tcp, 0.0.0.0:8085->8080/tcp                 orders-ms-spring\n093f8059c245        dev.local/web                                         \"container-entrypoin…\"   8 minutes ago        Up 8 minutes        0.0.0.0:3000->3000/tcp, 8080/tcp                 web\na0b8b6357607        mariadb                                               \"docker-entrypoint.s…\"   2 hours ago          Up 2 hours          0.0.0.0:3307->3306/tcp                           ordersmysql\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              2 hours ago          Up 2 hours          8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   2 hours ago          Up 2 hours          4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              16 hours ago         Up 16 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   17 hours ago         Up 17 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              17 hours ago         Up 17 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   18 hours ago         Up 18 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\nThere you go, you deploy all the necessary services for storefront.\n\nNow, let us check the app out. You can access it at http://localhost:3000.\n\n![Storefront](../../images/web.png)\n","type":"Mdx","contentDigest":"01895cd2573a9ede6aa39bfc9f4f095b","counter":102,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Deploy Storefront locally on your machine","description":"Instructions to deploy storefront locally"},"exports":{},"rawBody":"---\ntitle: Deploy Storefront locally on your machine\ndescription: Instructions to deploy storefront locally\n---\n\n## Introduction\n\nStorefront is a simple shopping application that displays a catalog of antique computing devices, where users can search and buy products. It has a Web interface, and it relies on BFF (Backend for Frontend) services to interact with the backend services.\n\n## Pre-requisites:\n\n* [Appsody](https://appsody.dev/)\n  - [Installing on MacOS](https://appsody.dev/docs/installing/macos)\n  - [Installing on Windows](https://appsody.dev/docs/installing/windows)\n  - [Installing on RHEL](https://appsody.dev/docs/installing/rhel)\n  - [Installing on Ubuntu](https://appsody.dev/docs/installing/ubuntu)\n\nFor more details on installation, check [this](https://appsody.dev/docs/installing/installing-appsody/) out.\n\n* Docker Desktop\n  - [Docker for Mac](https://docs.docker.com/docker-for-mac/)\n  - [Docker for Windows](https://docs.docker.com/docker-for-windows/)\n\n## Running the application locally\n\nLet us now deploy all the microservices of our storefront one by one locally.\n\n### Inventory\n\n- Clone inventory repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/inventory-ms-spring.git\ncd inventory-ms-spring\n```\n\n#### Deploy MySQL database\n\n<br></br>\n\n```\n# Start a MySQL Container with a database user, a password, and create a new database\ndocker run --name inventorymysql \\\n    -e MYSQL_ROOT_PASSWORD=admin123 \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e MYSQL_DATABASE=inventorydb \\\n    -p 3306:3306 \\\n    -d mysql:5.7.14\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n84a511e74794        mysql:5.7.14        \"docker-entrypoint.s…\"   13 seconds ago      Up 12 seconds       0.0.0.0:3306->3306/tcp   inventorymysql\n```\n\n- Now let us populate the MySQL with data.\n\nFirstly, `ssh` into the MySQL container.\n\n```\ndocker exec -it inventorymysql bash\n```\n\n- Now, run the below command for table creation.\n\n```\nmysql -udbuser -ppassword\n```\n\n- This will take you to something like below.\n\n```\nroot@d88a6e5973de:/# mysql -udbuser -ppassword\nmysql: [Warning] Using a password on the command line interface can be insecure.\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 2\nServer version: 5.7.14 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql>\n```\n\n- Go to `scripts > mysql_data.sql`. Copy the contents from [mysql_data.sql](./scripts/mysql_data.sql) and paste the contents in the console.\n\n- You can exit from the console using `exit`.\n\n```\nmysql> exit\nBye\n```\n\n- To come out of the container, enter `exit`.\n\n```\nroot@d88a6e5973de:/# exit\n```\n\n#### Deploy Inventory app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build inventory docker image\nappsody build\n\n# Start the Inventory Container\ndocker run --name inventory-ms-spring \\\n    -e MYSQL_HOST=<docker_host> \\\n    -e MYSQL_PORT=3306 \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e MYSQL_DATABASE=inventorydb \\\n    -p 8081:8080 \\\n    -d dev.local/inventory-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                              NAMES\naad8b8e1bce6        dev.local/inventory-ms-spring   \"/start.sh\"              6 seconds ago       Up 5 seconds        8443/tcp, 0.0.0.0:8081->8080/tcp   inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                    \"docker-entrypoint.s…\"   50 minutes ago      Up 50 minutes       0.0.0.0:3306->3306/tcp             inventorymysql\n```\n\n### Catalog\n\n- Clone catalog repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/catalog-ms-spring.git\ncd catalog-ms-spring\n```\n\n#### Deploy ElasticSearch\n\n<br></br>\n\n```\n# Start an Elasticsearch Container\ndocker run --name catalogelasticsearch \\\n      -e \"discovery.type=single-node\" \\\n      -p 9200:9200 \\\n      -p 9300:9300 \\\n      -d docker.elastic.co/elasticsearch/elasticsearch:6.3.2\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   6 minutes ago       Up 6 minutes        0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              11 minutes ago      Up 11 minutes       8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   About an hour ago   Up About an hour    0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n#### Deploy Catalog app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build catalog docker image\nappsody build\n\n# Start the Catalog Container\ndocker run --name inventory-ms-spring \\\n    -e ELASTIC_CLUSTER_NAME=docker-cluster \\\n    -e ELASTIC_NODE_URL=<docker_host>:9300 \\\n    -e INVENTORY_URL=http://<docker_host>:8081/micro/inventory \\\n    -p 8082:8080 \\\n    -d dev.local/catalog-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\ndocker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              4 seconds ago       Up 3 seconds        8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   37 minutes ago      Up 37 minutes       0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              41 minutes ago      Up 41 minutes       8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   2 hours ago         Up 2 hours          0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Customer\n\n- Clone customer repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/customer-ms-spring\ncd customer-ms-spring\n```\n\n#### Deploy CouchDB\n\n<br></br>\n\n```\n# Start a CouchDB Container with a database user, a password, and create a new database\ndocker run --name customercouchdb -p 5985:5984 -e COUCHDB_USER=admin -e COUCHDB_PASSWORD=passw0rd -d couchdb:2.1.2\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   26 seconds ago      Up 23 seconds       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              14 hours ago        Up 14 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n#### Deploy Customer app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build customer docker image\nappsody build\n\n# Start the customer Container\ndocker run --name customer-ms-spring \\\n    -e COUCHDB_PORT=5985 \\\n    -e COUCHDB_HOST=host.docker.internal \\\n    -e COUCHDB_PROTOCOL=http \\\n    -e COUCHDB_USERNAME=admin \\\n    -e COUCHDB_PASSWORD=passw0rd \\\n    -e COUCHDB_DATABASE=customers \\\n    -e HS256_KEY=E6526VJkKYhyTFRFMC0pTECpHcZ7TGcq8pKsVVgz9KtESVpheEO284qKzfzg8HpWNBPeHOxNGlyudUHi6i8tFQJXC8PiI48RUpMh23vPDLGD35pCM0417gf58z5xlmRNii56fwRCmIhhV7hDsm3KO2jRv4EBVz7HrYbzFeqI45CaStkMYNipzSm2duuer7zRdMjEKIdqsby0JfpQpykHmC5L6hxkX0BT7XWqztTr6xHCwqst26O0g8r7bXSYjp4a \\\n    -p 8083:8080 \\\n    -d dev.local/customer-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n34f3b55f7bee        dev.local/customer-ms-spring                          \"/start.sh\"              59 seconds ago      Up 58 seconds       8443/tcp, 0.0.0.0:8083->8080/tcp                 customer-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   26 minutes ago      Up 26 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Auth\n\n- Clone auth repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/auth-ms-spring.git\ncd auth-ms-spring\n```\n\n#### Deploy Auth app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build auth docker image\nappsody build\n\n# Start the Auth Container\ndocker run --name auth-ms-spring \\\n    -e CUSTOMER_URL=http://<docker_host>:8083/micro/customer/search \\\n    -e HS256_KEY=E6526VJkKYhyTFRFMC0pTECpHcZ7TGcq8pKsVVgz9KtESVpheEO284qKzfzg8HpWNBPeHOxNGlyudUHi6i8tFQJXC8PiI48RUpMh23vPDLGD35pCM0417gf58z5xlmRNii56fwRCmIhhV7hDsm3KO2jRv4EBVz7HrYbzFeqI45CaStkMYNipzSm2duuer7zRdMjEKIdqsby0JfpQpykHmC5L6hxkX0BT7XWqztTr6xHCwqst26O0g8r7bXSYjp4a \\\n    -p 8084:8080 \\\n    -d dev.local/auth-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              24 seconds ago      Up 23 seconds       8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   26 minutes ago      Up 26 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Orders\n\n- Clone orders repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/orders-ms-spring.git\ncd orders-ms-spring\n```\n\n#### Deploy Mariadb\n\n<br></br>\n\n```\n# Start a MariaDB Container with a database user, a password, and create a new database\ndocker run --name ordersmysql \\\n    -e MYSQL_ROOT_PASSWORD=admin123 \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e MYSQL_DATABASE=ordersdb \\\n    -p 3307:3306 \\\n    -d mariadb\n```\n\nIf it is successfully deployed, you will see something like below.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\na0b8b6357607        mariadb                                               \"docker-entrypoint.s…\"   7 seconds ago       Up 4 seconds        0.0.0.0:3307->3306/tcp                           ordersmysql\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              3 minutes ago       Up 3 minutes        8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   29 minutes ago      Up 29 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   15 hours ago        Up 15 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              16 hours ago        Up 16 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   16 hours ago        Up 16 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n#### Deploy Orders app\n\n<br></br>\n\nRun the below command.\n\n```\n# Build orders docker image\nappsody build\n\n# Start the Orders Container\ndocker run --name orders-ms-spring \\\n    -e MYSQL_HOST=<docker_host> \\\n    -e MYSQL_PORT=3307 \\\n    -e MYSQL_DATABASE=ordersdb \\\n    -e MYSQL_USER=dbuser \\\n    -e MYSQL_PASSWORD=password \\\n    -e HS256_KEY=E6526VJkKYhyTFRFMC0pTECpHcZ7TGcq8pKsVVgz9KtESVpheEO284qKzfzg8HpWNBPeHOxNGlyudUHi6i8tFQJXC8PiI48RUpMh23vPDLGD35pCM0417gf58z5xlmRNii56fwRCmIhhV7hDsm3KO2jRv4EBVz7HrYbzFeqI45CaStkMYNipzSm2duuer7zRdMjEKIdqsby0JfpQpykHmC5L6hxkX0BT7XWqztTr6xHCwqst26O0g8r7bXSYjp4a \\\n    -p 8085:8080 \\\n    -d dev.local/orders-ms-spring\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED             STATUS              PORTS                                            NAMES\nf21a9ac266c5        dev.local/orders-ms-spring                            \"/start.sh\"              50 seconds ago      Up 49 seconds       8443/tcp, 0.0.0.0:8085->8080/tcp                 orders-ms-spring\na0b8b6357607        mariadb                                               \"docker-entrypoint.s…\"   15 minutes ago      Up 14 minutes       0.0.0.0:3307->3306/tcp                           ordersmysql\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              18 minutes ago      Up 18 minutes       8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   44 minutes ago      Up 44 minutes       4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              15 hours ago        Up 15 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   16 hours ago        Up 16 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              16 hours ago        Up 16 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   17 hours ago        Up 17 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\n### Storefront UI\n\n- Clone auth repository\n\n```bash\ngit clone https://github.com/ibm-garage-ref-storefront/storefront-ui.git\ncd storefront-ui\n```\n\n#### Deploy Storefront UI\n\n<br></br>\n\nRun the below command.\n\n```\n# Build storefront ui docker image\nappsody build\n\n# Start the Storefront UI Container\ndocker run --name web \\\n  -e NODE_ENV=development \\\n  -p 3000:3000 \\\n  -d dev.local/web\n```\n\nFor instance, if it is docker-for-mac `<docker_host>` will be `docker.for.mac.localhost`.\n\n- You can also verify it as follows.\n\n```\n$ docker ps\nCONTAINER ID        IMAGE                                                 COMMAND                  CREATED              STATUS              PORTS                                            NAMES\nc0d657aa0886        dev.local/orders-ms-spring                            \"/start.sh\"              About a minute ago   Up About a minute   8443/tcp, 0.0.0.0:8085->8080/tcp                 orders-ms-spring\n093f8059c245        dev.local/web                                         \"container-entrypoin…\"   8 minutes ago        Up 8 minutes        0.0.0.0:3000->3000/tcp, 8080/tcp                 web\na0b8b6357607        mariadb                                               \"docker-entrypoint.s…\"   2 hours ago          Up 2 hours          0.0.0.0:3307->3306/tcp                           ordersmysql\na4a2aa7d9c59        dev.local/auth-ms-spring                              \"/start.sh\"              2 hours ago          Up 2 hours          8443/tcp, 0.0.0.0:8084->8080/tcp                 auth-ms-spring\n3be611140a1a        couchdb:2.1.2                                         \"tini -- /docker-ent…\"   2 hours ago          Up 2 hours          4369/tcp, 9100/tcp, 0.0.0.0:5985->5984/tcp       customercouchdb\n4d9b74402abb        dev.local/catalog-ms-spring                           \"/start.sh\"              16 hours ago         Up 16 hours         8443/tcp, 0.0.0.0:8082->8080/tcp                 catalog-ms-spring\ncc5af0ec4f75        docker.elastic.co/elasticsearch/elasticsearch:6.3.2   \"/usr/local/bin/dock…\"   17 hours ago         Up 17 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   catalogelasticsearch\naad8b8e1bce6        dev.local/inventory-ms-spring                         \"/start.sh\"              17 hours ago         Up 17 hours         8443/tcp, 0.0.0.0:8081->8080/tcp                 inventory-ms-spring\n7a958fa9cae3        mysql:5.7.14                                          \"docker-entrypoint.s…\"   18 hours ago         Up 18 hours         0.0.0.0:3306->3306/tcp                           inventorymysql\n```\n\nThere you go, you deploy all the necessary services for storefront.\n\nNow, let us check the app out. You can access it at http://localhost:3000.\n\n![Storefront](../../images/web.png)\n","fileAbsolutePath":"/home/travis/build/ibm-garage-ref-storefront/docs/src/pages/deployments/appsody.mdx"}}}}